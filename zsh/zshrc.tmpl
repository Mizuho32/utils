# color
autoload colors 
colors

# prompt
local info="%B%F{green}%n%f%F{red}@%f%F{cyan}%m%f%b" 
local prom="%B%(?,%F{green},%F{red})%(!, #>, $>)%f%b" 
local dir=$'\n'"%B%F{yellow}[%~]%f%b"$'\n' 
PROMPT="${dir}${info}${prom}"


# ls
export LSCOLORS=gxfxcxdxbxegedabagacag
export LS_COLORS='di=36;40:ln=35;40:so=32;40:pi=33;40:ex=31;40:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;46'

# 補完候補もLS_COLORSに合わせて色が付くようにする
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}

# lsがカラー表示になるようエイリアスを設定
case "${OSTYPE}" in
			linux*)
			  # Linux
			  alias ls='ls -F --color'
			  ;;
esac


# 補完
autoload -U compinit
compinit

########################### alias
alias dartium="dartium --allow-file-access-from-files"
alias google-chrome="google-chrome --allow-file-access-from-files"
alias open="xdg-open"
alias sl="sl -e"
alias LS="sl"

########################### exports
#export HAXE_STD_PATH="$HOME/haxe/std:." # the ':.' part is important
#export HAXE_HOME="$HOME/haxe"
#export PATH="$HAXE_LIBRARY_PATH:$HAXE_HOME:$PATH"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda/lib64"
export PATH="$HOME/.nvm/versions/node/v0.12.0/bin:$HOME/.nvm:/usr/local/cuda/bin:$HOME/.rbenv/bin:$HOME/bin:$PATH"
export PI="192.168.1.28"
export PI2="192.168.1.33"
export BBB="192.168.1.23"
export LC_ALL=ja_JP.UTF-8
export LANG=ja_JP.UTF-8
export PATH=${PATH}:${HOME}/Android/Sdk/tools:${HOME}/Android/Sdk/platform-tools
export RUBYLIB="$HOME/lib/ruby:$RUBYLIB"
export PATH="$PATH:$HOME/sources/esp/xtensa-esp32-elf/bin"

# rbenv
eval "$(rbenv init -)"

# exports
export GIT_EDITOR=vim
export VIM=<%= vim %>
export VIMRUNTIME=<%= vimruntime %>

# History
HISTFILE=~/.zsh_history
HISTSIZE=2000
SAVEHIST=2000
setopt hist_ignore_dups     # ignore duplication command history list
setopt share_history        # share command history data

#################### ssh Login prompt #####################
# Set DISPLAY ENV?
if [ "${SSH_CLIENT}" != "" ]; then
  echo ""
	echo -n 'Set $DISPLAY To localhost:N.0 ? [0,1... / n] >>'
	read input

	if [ "${input}" != "n" -a "${input}" != "" ]; then
			export DISPLAY="localhost:${input}.0"
	fi
fi

# Tmux select
ZSHRC="$HOME/.zshrc"
if [ -L $ZSHRC ] ; then
    ZSHRC_DIR=$(dirname $(readlink -f $ZSHRC)) ;
else
    ZSHRC_DIR=$(dirname $ZSHRC) ;
fi ; 

$ZSHRC_DIR/tmux.rb
